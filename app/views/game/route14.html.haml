!!!
%html
  %head
    %meta{:content => "text/html; charset=UTF-8", "http-equiv" => "Content-Type"}/
    %link{:href => "//fonts.googleapis.com/css?family=Pirata+One", :rel=> "stylesheet", :type => "text/css"}/

%butt#button KINGDOM

.wrapper
  %input#view{:name => "view", :style => "display:none;", :type => "checkbox"}/
  %label{:for => "view"}
.banner
  #text SCAN KINGDOM
  %form#form1{:runat => "server"}
  %input#imgInp{:accept => "image/*", :type => "file"}/
%img#imgParse.pic{:src => "#", :width => "400px"}/




:scss
    #imgInp {
        position: absolute;
        margin-top: -90px;
        font-size: 3em;
        opacity: 0;
    }

    @keyframes shakeIt {
      0% {
        -webkit-transform: rotate(0deg);
        -ms-transform: rotate(0deg);
        -o-transform: rotate(0deg);
        transform: rotate(0deg);
      }
    
      100% {
        -webkit-transform: rotate(360deg);
        -ms-transform: rotate(360deg);
        -o-transform: rotate(360deg);
        transform: rotate(360deg);
      }
    }
    
    @keyframes buzz {
      0% {
        transform: rotate(7deg);
      }
    
      100% {
        transform: rotateZ(-7deg);
      }
    }
    
    #text {
        font-family: 'Tangerine', serif;
        
        margin-top: 5px;
        margin-right: 16px;
        background-color: transparent;

        text-align: center;
        justify-content: center;
        align-items: center;
        display: inline-block;
 
        font-size: 30px;
        outline: none;
        cursor: pointer;
        pointer-events:none;
        padding: 8px;
        width: 70%;
        height: 50%;
        border-radius: 5px;

        color: #ff912d;
        
        text-shadow: -1px 2px 0 #a86526, 0 0px #929090, 2px 0 #a86526, 0 0px #929090;
        text-decoration: none;
        letter-spacing: 3px;
        transition: all 0.3s ease-out;
        
        line-height: 90%;
        
        -webkit-text-stroke-width: 0px;
        -webkit-text-stroke-color: #a86526;
        
        font-weight: 580;
        margin-left: 45px;
        margin-top: 30px;
    }
    body {
      margin: 0;
      padding: 0;
      background-image: url("/assets/back2.png");
      background-position: 0px -50px;

      color: white;
      opacity: 0.9;
      font-family: 'PT Sans', sans-serif;
      background-repeat: no-repeat;
      background-size: cover;
      position: relative;
      top: 350px;
      left: 5px;

    }
    .pic {
        width: 280px;
        height: 390px;
        // background: black;
        // opacity: .5;
        position: absolute;
        top: -255px;
        left: 45px;
        z-index: 1;
        // border:none;
    }
    
    .banner {
        width: 380px;
        height: 200px;
        background-image: url("/assets/ban.png");
        background-size: cover;
        background-color: transparent;
        position: absolute;
        top: -258px;
        left: 10px;
        z-index: 3;
        background-size: 350px 145px;
        
        background-repeat: no-repeat;
        z-index: 3;
    }
    .wrapper {
      margin: 0 auto;
      max-width: 1140px;
      text-align: center;
      padding-top: 70px;
      position: relative;
      z-index: 2;

    }
    
    label[for=view] {

      display: inline-block;
     
      font-size: 32px;
      
      transition: 0.15s ease-in-out;
      cursor: pointer;
      user-select: none;
      animation-play-state: paused;
      animation: buzz .7s ease-in-out 0s infinite alternate-reverse;
      
      background: rgba(0,0,0,.5);

      background-image: url("/assets/icon.png");

      border: 10px solid rgba(112, 104, 99, .7); 
      border-radius: 50%;
      
      width: 150px;
      height: 150px;

      
      
      background-size: cover;
      background-repeat: no-repeat;
      &:hover {
        box-shadow: 0px 2px 0px rgba(0, 0, 0, 0.25);
      }
    }
   
    
    #view:checked + label[for=view] {
      background-color: transparent;
      background-color: rgba(0, 0, 0, .3);
      box-shadow: 2px 5px 5px rgba(0, 0, 0, 0.4);
      background-image: url("/assets/sword3.png");
      
      transition: 0.25s cubic-bezier(0.25, 2.38, 0.91, 1.19);
      animation: shakeIt 3s ease-in-out 0s infinite;
      
      background-repeat: no-repeat;
      background-size: 130px 130px;
      background-position: center; 
        
    }
    
    #button {
      font-family: 'Tangerine', serif;

      text-align: center;
      justify-content: center;
      align-items: center;
      display: inline-block;
      
      box-sizing: border-box;
      padding: 8px;
      width: 60%;
      height: 14%;
      
      border-radius: 4px;
      color: #ff912d;
      text-shadow: -3px 3px 0 #7c7872, 0 0px #929090, 2px 0 #929090, 0 0px #929090;
      text-decoration: none;
      letter-spacing: 8px;
      transition: all 0.3s ease-out;
      font-size: 98%;
      
      -webkit-text-stroke-width: 1px;
      -webkit-text-stroke-color: #96420a;
      
      font-weight: 700;
      
      position: absolute;
      top: -335px;
      left: 85px;
      z-index: 999;
    }
   
:coffeescript
  $("butt").click ->
    console.log('hello')
    window.location.href = "/game/kingdom";
    return


  # Basic communication
    
  thisID = 0
  $ ->
    $("#text_turn").html("It's not your turn!")
        
    console.log "WEBSOCKET SET-UP"
        
    socket = new WebSocket('wss://irisyon-finalproj-irisyon.c9users.io:8081')
        
    socket.onopen = ->
      console.log "Connection opened"
      socket.send("Ping")
      return
    socket.onerror = (error) ->
      console.log "WebSocket Error " + error
      return
    socket.send2 = (iClient, iReceiver, iMove, iText) ->
      communication =
        senderID: iClient
        receiverID: iReceiver
        move: iMove     
          # Idea: Type of message
          # Options: message, turn_start, turn_end, kingdom_scan, ?
        text: iText     
          # Idea: Content of message
          # Options: Text as string, for kingdom_scan it would be the image data
      socket.send JSON.stringify(communication)
      console.log "Sent: " + JSON.stringify(communication)
      return

    socket.onmessage = (e) ->
      console.log "Received: " + e.data
      if e.data.includes("deviceID") and thisID == 0
        communication = JSON.parse(e.data)
        thisID = communication.deviceID
        console.log "New device has received ID: " + thisID
      else if e.data.includes("senderID")
        communication = JSON.parse(e.data)
        console.log "Message from " + communication.senderID
        if communication.senderID == "server"
          console.log communication.receiverID + " " + thisID
          if communication.move == "id_check"
            socket.send2(thisID, "server", "id_check", thisID)
          else if communication.move == "id_keep" and communication.receiverID == thisID
            thisID = communication.text
            console.log "Reassigned old ID: " + thisID
          else if communication.move == "ping"
            socket.send2(thisID, "server", "ping")
      return




:javascript
  function readURL(input) {
    if (input.files && input.files[0]) {
      var reader = new FileReader();
      
      reader.onload = function (e) {
      $('#imgParse').attr('src', e.target.result);
      // $("#text").text("SCANNING");
      $(".banner").css("display", "none");
      $("#view").prop('checked', true);
     // getTransfer(reader.result);
    }
    reader.readAsDataURL(input.files[0]);
    }
  }

  $("#imgInp").change(function(){
    readURL(this);
  });

   