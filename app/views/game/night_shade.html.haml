%link{:href => "https://code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.min.css", :rel => "stylesheet"}/
%script{:src => "https://code.jquery.com/jquery-1.12.4.min.js", :type => "text/javascript"}
%script{:src => "https://code.jquery.com/ui/1.12.1/jquery-ui.min.js", :type => "text/javascript"}
%script{:src => "//cdnjs.cloudflare.com/ajax/libs/jqueryui-touch-punch/0.2.3/jquery.ui.touch-punch.min.js"}



%body
    %h1 Try formula
    %h3#kingdoms Candy, Leaf, Fish, Tech, Space, Wizard
    %input.input#userInput1{:type => "number", :value => "0"}
    %input.input#userInput2{:type => "number", :value => "0"}
    %input.input#userInput3{:type => "number", :value => "0"}
    %h3#answer ...
    %button.btn#testData Test Data
    %button#btn_end End Turn 
    
#touchpad
    #candy
        %h2 
    #leaf
        %h2
    #space
        %h2
    #wizard
        %h2
    #tech
        %h2
    #fish
        %h2
    #candytwo
        %h2 
    #leaftwo
        %h2
    #spacetwo
        %h2
    #wizardtwo
        %h2
    #techtwo
        %h2
    #fishtwo
        %h2
#dropzone1.dropzone
    %h2 DROPZONE1



:scss
    $touchpad-bg: desaturate(cyan, 70%);
    $touch-square: lighten($touchpad-bg, 70%);
    
    body {
      margin: 0;
      padding: 0;
      background-image: url("/assets/back2.png");
      background-position: 0px -30px;
      color: white;
      font-family: 'PT Sans', sans-serif;
      background-repeat: no-repeat;
      background-size: cover;
      top: -30px;
    }
    #touchpad{
        height: 100%;
        width: 100%;
        color: white;
        font-family: Avenir, sans-serif;
        font-size: 4em;
        text-align: center;
        justify-content: center;
        align-items: center;
        
       -webkit-align-items: center;
       align-items: center;
       -webkit-justify-content: center;
       justify-content: center;
       /* You can set flex-wrap and flex-direction individually */
       -webkit-flex-direction: row;
       flex-direction: row;
       -webkit-flex-wrap: wrap;
       flex-wrap: wrap;
       /* Or do it all in one line with flex flow */
       -webkit-flex-flow: row wrap;
       flex-flow: row wrap;
       /* tweak the where items line up on the row */
       /* valid values are: flex-start, flex-end, space-between, space-around, stretch */
       -webkit-align-content: flex-end;
       align-content: flex-end;
        #candy{
            width: 200px;
            height: 200px;
            background: $touch-square;
            color: darken($touchpad-bg, 60%);
            
            border-radius: 50%;
            
            h2{
                font-size: 22px;
            }
            background: transparent;
            background-image: url("/assets/res_Candy.png");
            background-size: contain;
            background-repeat: no-repeat;
            background-position: center;
        }
        #leaf {
            width: 200px;
            height: 200px;
            background: $touch-square;
            color: darken($touchpad-bg, 60%);
            
            border-radius: 50%;
            
            h2{
                font-size: 22px;
            }
            background: transparent;
            background-image: url("/assets/res_Leaf.png");
            background-size: contain;
            background-repeat: no-repeat;
            background-position:center;
        }
        #space {
            width: 200px;
            height: 200px;
            background: $touch-square;
            color: darken($touchpad-bg, 60%);
            
            border-radius: 50%;
            
            h2{
                font-size: 22px;
            }
            background: transparent;
            background-image: url("/assets/res_Space.png");
            background-size: contain;
            background-repeat: no-repeat;
            background-position:center;
            
        }
        #wizard {
            width: 200px;
            height: 200px;
            background: $touch-square;
            color: darken($touchpad-bg, 60%);
            
            border-radius: 50%;
            
            h2{
                font-size: 22px;
            }
            background: transparent;
            background-image: url("/assets/res_Wizard.png");
            background-size: contain;
            background-repeat: no-repeat;
            background-position:center;
        }
        #tech{
            width: 150px;
            height: 150px;
            background: $touch-square;
            color: darken($touchpad-bg, 60%);
            
            border-radius: 50%;
            
            h2{
                font-size: 22px;
            }
            background-image: url("/assets/res_Tech.png");
            background-size: contain;
            background-repeat: no-repeat;
            opacity: 0.5;
            background-position:center;
            margin: 50px;
        }
        #fish{
            width: 200px;
            height: 200px;
            background: $touch-square;
            color: darken($touchpad-bg, 60%);
            
            border-radius: 50%;
            
            h2{
                font-size: 22px;
            }
            background: transparent;
            background-image: url("/assets/res_Fish.png");
            background-size: contain;
            background-repeat: no-repeat;
            background-position:center;
        }
        #candytwo{
            width: 200px;
            height: 200px;
            background: $touch-square;
            color: darken($touchpad-bg, 60%);
            
            border-radius: 50%;
            
            h2{
                font-size: 22px;
            }
            background: transparent;
            background-image: url("/assets/res_Candy.png");
            background-size: contain;
            background-repeat: no-repeat;
            background-position: center;
        }
        
        #leaftwo {
            width: 200px;
            height: 200px;
            background: $touch-square;
            color: darken($touchpad-bg, 60%);
            
            border-radius: 50%;
            
            h2{
                font-size: 22px;
            }
            background: transparent;
            background-image: url("/assets/res_Leaf.png");
            background-size: contain;
            background-repeat: no-repeat;
            background-position:center;
        }
        #spacetwo {
            width: 200px;
            height: 200px;
            background: $touch-square;
            color: darken($touchpad-bg, 60%);
            
            border-radius: 50%;
            
            h2{
                font-size: 22px;
            }
            background: transparent;
            background-image: url("/assets/res_Space.png");
            background-size: contain;
            background-repeat: no-repeat;
            background-position:center;
        }
        #wizardtwo {
            width: 200px;
            height: 200px;
            background: $touch-square;
            color: darken($touchpad-bg, 60%);
            
            border-radius: 50%;
            
            h2{
                font-size: 22px;
            }
            background: transparent;
            background-image: url("/assets/res_Wizard.png");
            background-size: contain;
            background-repeat: no-repeat;
            background-position:center;
        }
        #techtwo{
            width: 150px;
            height: 150px;
            background: $touch-square;
            color: darken($touchpad-bg, 60%);
            
            border-radius: 50%;
            
            h2{
                font-size: 22px;
            }
            background-image: url("/assets/res_Tech.png");
            background-size: contain;
            background-repeat: no-repeat;
            opacity: 0.5;
            background-position:center;
            margin: 50px;
        }
        #fishtwo{
            width: 200px;
            height: 200px;
            background: $touch-square;
            color: darken($touchpad-bg, 60%);
            
            border-radius: 50%;
            
            h2{
                font-size: 22px;
            }
            background: transparent;
            background-image: url("/assets/res_Fish.png");
            background-size: contain;
            background-repeat: no-repeat;
            background-position:center;
        }
        #dropzone1{
            width: 300px;
            height: 300px;
            background: lighten(desaturate(cyan, 70%), 40%);
        }
        .dropzone{
        
            margin: 10px;
            color: darken($touchpad-bg, 60%);
            justify-content: center;
            align-items: center;
            h2{
                font-size: 22px;
            }
        }
    }
    
:coffeescript
    
    thisID = 0
    userData = [0,0,0]
    secForm = [0,0,0]
    
    input = []
    i = 0
    $ ->
        
        console.log "WEBSOCKET SET-UP"
        
        socket = new WebSocket('wss://irisyon-finalproj-irisyon.c9users.io:8081')
        
        socket.onopen = ->
            console.log "Connection opened"
            socket.send("Ping")
            return
        socket.onerror = (error) ->
            console.log "WebSocket Error " + error
            return
        socket.send2 = (iClient, iReceiver, iMove, iText) ->
            communication =
                senderID: iClient
                receiverID: iReceiver
                move: iMove     
                    # Idea: Type of message
                    # Options: message, turn_start, turn_end, kingdom_scan, ?
                text: iText     
                    # Idea: Content of message
                    # Options: Text as string, for kingdom_scan it would be the image data
            socket.send JSON.stringify(communication)
            console.log "Sent: " + JSON.stringify(communication)
            return

        socket.onmessage = (e) ->
            console.log "Received: " + e.data
            if e.data.includes("deviceID") and thisID == 0
                communication = JSON.parse(e.data)
                thisID = communication.deviceID
                console.log "New device has received ID: " + thisID
                socket.send2(thisID, "server", "get_gamedata")
            else if e.data.includes("senderID")
                communication = JSON.parse(e.data)
                console.log "Message from " + communication.senderID
                if communication.senderID == "server" 
                    if communication.move == "id_check"
                        socket.send2(thisID, "server", "id_check", thisID)
                    if communication.move == "id_keep" and communication.receiverID == thisID
                        thisID = communication.text
                        console.log "Reassigned old ID: " + thisID
                    if communication.move == "gamedata" and communication.receiverID == thisID
                        gamedata = communication.text.split(',')
                        $("#kingdoms").html(gamedata[0] + ',' + gamedata[1] + ',' + gamedata[2])
                        secForm[0] = gamedata[3]
                        secForm[1] = gamedata[4]
                        secForm[2] = gamedata[5]
                        
                        console.log "Reassigned old ID: " + thisID
                    if communication.move == "ping"
                        socket.send2(thisID, "server", "ping")
            return 
        
        $("#testData").click -> 
            $("#answer").html("Correct!")
            userData[0] = $("#userInput1")[0].value
            userData[1] = $("#userInput2")[0].value
            userData[2] = $("#userInput3")[0].value
            for i in [0..2]
                if userData[i] - secForm[i] != 0
                    $("#answer").html("Incorrect!")
        
        $("#btn_end").click ->
            socket.send2(thisID, "server", "turn_end", "")
            window.location.href = "/game/treasure_map";
        
        console.warn "IS JQUERYUI DROPPABLE INSTALLED?", $(window).droppable
        
        resources = 
            'candy':
                type: 'candy'
            'leaf':
                type: 'leaf'
            'space':
                type: 'space'
            'wizard':
                type: 'wizard'
            'tech':
                type: 'tech'
            'fish':
                type: 'fish'
            'candytwo':
                type: 'candy'
            'leaftwo':
                type: 'leaf'
            'spacetwo':
                type: 'space'
            'wizardtwo':
                type: 'wizard'
            'techtwo':
                type: 'tech'
            'fishtwo':
                type: 'fish'
        
        
        
        $("#candy").draggable({
            revert: "invalid"
        })
        
        $("#leaf").draggable({
            revert: "invalid"

        })
        
        $("#space").draggable({
            revert: "invalid"
        })
        
        $("#wizard").draggable({
            revert: "invalid" 
        })
        
        $("#tech").draggable({
            revert: "invalid"
        })
        
        $("#fish").draggable({
            revert: "invalid"
        })
        
        $("#candytwo").draggable({
            revert: "invalid"
        })
        
        $("#leaftwo").draggable({
            revert: "invalid"

        })
        
        $("#spacetwo").draggable({
            revert: "invalid"
        })
        
        $("#wizardtwo").draggable({
            revert: "invalid" 
        })
        
        $("#techtwo").draggable({
            revert: "invalid"
        })
        
        $("#fishtwo").draggable({
            revert: "invalid"
        })

            
                
        $('#dropzone1').droppable
            over: (event, ui) ->
                $(ui.draggable).css("background-color", "rgba(33, 32, 32, .5)")
            drop: (event, ui) ->
                $(ui.draggable).css("background-color", "rgba(33, 32, 32, .7)")
                $id = ui.draggable.prop('id')
                type = resources[$id].type
                console.log(type)
                
                input[i] = type
                if input.length == 1
                    console.log "here"
                
                i++
        return
                