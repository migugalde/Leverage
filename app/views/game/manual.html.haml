

#image

%body 

#container
  .button-main
    .button-inside#butt
!!!
%html
  %head
    %meta{:content => "text/html; charset=UTF-8", "http-equiv" => "Content-Type"}/
    %link{:href => "https://fonts.googleapis.com/css?family=Pirata One", :rel => "stylesheet"}/

:coffeescript
  $("#butt").click ->
    console.log("HERE")
    window.location.href = "/game/index"
  thisID = 0
  $ ->
    $("#text_turn").html("It's not your turn!")
        
    console.log "WEBSOCKET SET-UP"
        
    socket = new WebSocket('wss://irisyon-finalproj-irisyon.c9users.io:8081')
        
    socket.onopen = ->
      console.log "Connection opened"
      socket.send("Ping")
      return
    socket.onerror = (error) ->
      console.log "WebSocket Error " + error
      return
    socket.send2 = (iClient, iReceiver, iMove, iText) ->
      communication =
        senderID: iClient
        receiverID: iReceiver
        move: iMove     
          # Idea: Type of message
          # Options: message, turn_start, turn_end, kingdom_scan, ?
        text: iText     
          # Idea: Content of message
          # Options: Text as string, for kingdom_scan it would be the image data
      socket.send JSON.stringify(communication)
      console.log "Sent: " + JSON.stringify(communication)
      return

    socket.onmessage = (e) ->
      console.log "Received: " + e.data
      if e.data.includes("deviceID") and thisID == 0
        communication = JSON.parse(e.data)
        thisID = communication.deviceID
        console.log "New device has received ID: " + thisID
      else if e.data.includes("senderID")
        communication = JSON.parse(e.data)
        console.log "Message from " + communication.senderID
        if communication.senderID == "server"
          console.log communication.receiverID + " " + thisID
          if communication.move == "id_check"
            socket.send2(thisID, "server", "id_check", thisID)
          else if communication.move == "id_keep" and communication.receiverID == thisID
            thisID = communication.text
            console.log "Reassigned old ID: " + thisID
          else if communication.move == "ping"
            socket.send2(thisID, "server", "ping")
      return
      
    
    
:css
  body {
  	margin: 0;
  	background-color: #404040;
  	font-family: 'Pirata One';
  }
  
  #container {
  	width: 25em;
  	margin: 3em auto;
  	font-family: 'Pirata One';
    z-index: 99;
  }
  
  
  .button-main {
  	width: 6em;
  	height: 6em;
  	background-color: rgba(165, 104, 11, 0.5);
  	background-image: linear-gradient(180deg, #a5680b, #999);
  	background: transparent;
  	border-top: 3px solid #CCC;
  	border-right: 3px solid #CCC;
  	border-left: 4px solid #666;
  	border-bottom: 4px solid #666;
  	border-radius: 50%;
  	float: left;
  	margin-left: 142px;
  	margin-top: 430px;
  	text-decoration: none;
  	box-shadow:  -.1em .1em 0 #000,
  				 -.2em .2em 0 #000,
  				 -.3em .3em 0 #000,
  				 -.04em .04em 0 #333,
  				 -.01em .05em 0 #333,
  				 -0.06em .6em 0 #333,
  				 -0.07em .7em 30px #333,
  				 -.1em .9em 20px #333,
  				 -0.5em 1em 30px #333,
  				 -0.1em 0.05em 30px #333,
  				 -0.1em .06em 300px #333;
  	transition: box-shadow 0.3s,
  				border-top 0.3s,
  				border-right 0.3s;
  	font-family: 'Pirata One';
  	background-image: url("/assets/swordsGrey-128.png");
  	background-size: cover;
  	background-repeat: no-repeat;

  }
  
  .button-main:hover, .button-main:focus {
  	box-shadow: .1em -.1em 0 #333,
  				.2em -.2em 0 #333,
  				-.1em .1em 0 #333,
  				-.2em .2em 0 #333,
  				-.3em .3em 0 #333,
  				inset -.1em -.1em 2em #FFF,
  				-.1em -.1em 2em #666;
  	border-top: 3px solid #666;
  	border-right: 3px solid #666;
  }
  
  .button-inside {
  	width: 5em;
  	height: 4.5em;
  	margin: .5em auto;
  	border-radius: 50%;
  	background-color: rgba(188, 130, 43, .4);
  	background-image: linear-gradient(45deg, #bc822b, #999);
    background: transparent;
  	box-shadow: inset -.15em .15em 0 #666,
  				inset .1em -.1em 0 #CCC;
  }
  
  here {
    
  	font-family: 'Pirata One';
  	font-size: 25px;
  	color: #F2F2F2;
  	text-align: center;
  	line-height: 1.3em;
  	margin-top: 5px;
  	text-shadow: -.01em .01em 0 #666,
  				 -.02em .02em 0 #666,
  				 -.03em .03em 0 #666,
  				 -.04em .04em 0 #666,
  				 -.05em .05em 0 #666,
  				 -.06em .06em 0 #999,
  				 -.07em .07em 0 #999,
  				 -.08em .08em 0 #999,
  				 -.09em .09em 0 #999,
  				 -.1em .1em 0 #999,
  				 -.11em .11em 0 #999;
    color: #ff912d;
    text-shadow: -3px 3px 0 #7c7872, 0 0px #929090, 2px 0 #929090, 0 0px #929090;
    text-decoration: none;
    letter-spacing: 8px;
    -webkit-text-stroke-width: 1px;
    -webkit-text-stroke-color: #913605;
    
    font-weight: 700;
    opacity: 0.8;
  }


:scss
    
  body {
    margin: 0;
    padding: 0;
    background-image: url("/assets/back2.png");
    background-position: 0px -30px;
    color: white;
  	font-family: 'Pirata One';
    background-repeat: no-repeat;
    background-size: cover;
    position: relative;
    top: -30px;
  }
  
  #contain {
    width: 100%;
    height: 100%;
    
  }
  
  #btn_back{
    z-index: 100
  }

  #image {
    width: 350px;
    height: 350px;
    background-image: url("/assets/manual.png");
    background-size: cover;
    position: absolute;
    
    background-position: right;
    margin-left: 50px;
    max-height: 100vh;
    overflow-y: auto;
  }
  
  a {
  	position: relative;
  	display: inline-block;
  	padding: 1.2em 2em;
  	text-decoration: none;
  	text-align: center;
  	cursor: pointer;
  	user-select: none;
  	color: white;
  	
  	&::before {
  		content: '';
  		position: absolute;
  		top: 0;
  		left: 0;
  		bottom: 0;
  		right: 0;
  		background: linear-gradient(135deg, #6e8efb, #a777e3);
  		background: transparent;
  		border-radius: 4px;
  		transition: box-shadow .5s ease, transform .2s ease; 
  		will-change: transform;
  		box-shadow: 0 2px 5px rgba(0, 0, 0, .2);
  		transform:
  			translateY(var(--ty, 0))
  			rotateX(var(--rx, 0))
  			rotateY(var(--ry, 0))
  			translateZ(var(--tz, -12px));
  	}
  	
  	&:hover::before {
  		box-shadow: 0 5px 15px rgba(0, 0, 0, .3);
  	}
  	
  	&::after {
  		position: relative;
  		display: inline-block;
  		content: attr(data-title);
  		transition: transform .2s ease; 
  		font-weight: bold;
  		letter-spacing: .01em;
  		will-change: transform;
  		transform:
  			translateY(var(--ty, 0))
  			rotateX(var(--rx, 0))
  			rotateY(var(--ry, 0));
  	}
  }
  
  body {
  	display: flex;
  	align-items: center;
  	justify-content: center;
  	height: 100vh;
  	transform-style: preserve-3d;
  	transform: perspective(800px);
  }
    
