:coffeescript
    thisID = 0
    $ ->
      
      console.log "WEBSOCKET SET-UP"
        
      socket = new WebSocket('wss://finalproject-wiesn.c9users.io:8081')
        
      socket.onopen = ->
        console.log "Connection opened"
        socket.send("Ping")
        return
      socket.onerror = (error) ->
        console.log "WebSocket Error " + error
        return
      socket.send2 = (iClient, iReceiver, iMove, iText) ->
        communication =
          senderID: iClient
          receiverID: iReceiver
          move: iMove     
            # Idea: Type of message
            # Options: message, turn_start, turn_end, kingdom_scan, ?
          text: iText     
            # Idea: Content of message
            # Options: Text as string, for kingdom_scan it would be the image data
        socket.send JSON.stringify(communication)
        console.log "Sent: " + JSON.stringify(communication)
        return

      socket.onmessage = (e) ->
        console.log "Received: " + e.data
        if e.data.includes("deviceID") and thisID == 0
          communication = JSON.parse(e.data)
          thisID = communication.deviceID
          console.log "New device has received ID: " + thisID
        else if e.data.includes("senderID")
          communication = JSON.parse(e.data)
          console.log "Message from " + communication.senderID
          if communication.senderID == "server" 
            if communication.move == "id_check"
              socket.send2(thisID, "server", "id_check", thisID)
            if communication.move == "id_keep" and communication.receiverID == thisID
              thisID = communication.text
              console.log "Reassigned old ID: " + thisID
          return 
      
      
      
      
      container = document.querySelector('#container')
      panel = document.querySelector('#panel')
      panorama = new (PANOLENS.ImagePanorama)('/assets/ugh.jpg')
      infospot = new (PANOLENS.Infospot)(1000, '/assets/closedchest.png')
      infospot.position.set 0, -2000, -5000
      infospot.addHoverElement panel, 150
      infospot.addHoverText("IT'S A TRAP!")
      infospot.lockHoverElement()
      infospot.addEventListener 'click', ->
        
        
        console.log("hi")
        return

      panorama.add infospot
      viewer = new (PANOLENS.Viewer)(container: container)
      viewer.add panorama
      viewer.enableControl(1);
      renderer = new THREE.WebGLRenderer( { alpha: true } )
      renderer.setClearColor(0x000000, 0)
      renderer.setSize panel.clientWidth, panel.clientHeight
      
      console.log(panel.clientHeight)
      console.log(panel.clientWidth)
      camera = new (THREE.PerspectiveCamera)(45, panel.clientWidth / panel.clientHeight, 1, 2000)
      scene = new (THREE.Scene)

      $("#btn_end").click ->
        socket.send2(thisID, "server", "turn_end", "")
        window.location.href = "/game/treasure_map";
        
      
      
      
#container
%button#btn_end End Turn

#panel
        
:scss
    $bg: desaturate(green, 20%);
    html, body{
      width: 100%;
      height: 100%;
    }
    #wand{
        height: 100%;
        width: 100%;
        overflow: none;
        color: white;
        font-family: Arial, sans-serif;
        font-size: 4em;
        text-align: center;
            
        display: flex;
        justify-content: center;
        align-items: center;
        flex-direction: column;
    }
    #heading {
        text-shadow: -2px 0 black, 0 2px black, 2px 0 #929090, 0 -2px #929090;
        position: absolute;
        top: 200px;
        left: 470px;
        text-align: center;
        font-size: 150%;
        color: white;
        font-family: Arial, sans-serif;
        font-size: 4em;
        display: flex;
        justify-content: center;
        align-items: center;
        flex-direction: column;
    }
    #container {
      height: 100%;
      width: 100%;
    }
    #panel {
      width: 400px;
      height: 400px;
      background-image: url("/assets/trap.gif");
      color: white;
      text-align: center;
    }
    