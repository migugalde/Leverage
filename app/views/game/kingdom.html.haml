%butt#button

#container
    #bg
    
.wrapper
    %input#view{:name => "view", :style => "display:none;", :type => "checkbox"}/
    %label{:for => "view"}

!!!
%html
    %head
        %meta{:content => "text/html; charset=UTF-8", "http-equiv" => "Content-Type"}/
        %link{:href => "//fonts.googleapis.com/css?family=Pirata+One", :rel=> "stylesheet", :type => "text/css"}/

:css
    html, body{
      width: 100%;
      height: 100%;
      font-family: 'Tangerine', serif;
      font-size: 48px;
      
    }
    #container {
      height: 100%;
      width: 100%;
    }
    #bg {
        position: absolute;
        width: 100%;
        height: 100%;
        background-image: url("/assets/entrance.png");
        background-position: 0px -25px;
        background-repeat: no-repeat;
        background-size: cover;

    }

:scss

    @keyframes buzz {
      0% {
        -webkit-transform: rotate(0deg);
        -ms-transform: rotate(0deg);
        -o-transform: rotate(0deg);
        transform: rotate(0deg);
      }
    
      100% {
        -webkit-transform: rotate(360deg);
        -ms-transform: rotate(360deg);
        -o-transform: rotate(360deg);
        transform: rotate(360deg);
      }
    }
   
    body {
      margin: 0;
      padding: 0;


    }


    .wrapper {
      margin: 0 auto;
      max-width: 1140px;
      text-align: center;
      position: absolute;
      top: 465px;
      left: 120px;
      z-index: 2;

    }
        
    label[for=view] {

      display: inline-block;
     
      font-size: 32px;
      
      transition: 0.15s ease-in-out;
      cursor: pointer;
      user-select: none;
      animation-play-state: paused;
      animation: buzz 3s ease-in-out 0s infinite alternate-reverse;
      
      background: rgba(0,0,0,.5);

      background-image: url("/assets/sword3.png");

      border: 10px solid rgba(112, 104, 99, .7); 
      border-radius: 50%;
      
      width: 85px;
      height: 85px;

      
      
      background-size: cover;
      background-repeat: no-repeat;
      &:hover {
        box-shadow: 0px 2px 0px rgba(0, 0, 0, 0.25);
      }
    }
    #button {
      font-family: 'Tangerine', serif;

      text-align: center;
      justify-content: center;
      align-items: center;
      display: inline-block;
      
      box-sizing: border-box;
      padding: 8px;
      width: 60%;
      height: 14%;
      
      border-radius: 4px;
      color: #ff912d;
      text-shadow: -3px 3px 0 #7c7872, 0 0px #929090, 2px 0 #929090, 0 0px #929090;
      text-decoration: none;
      letter-spacing: 8px;
      transition: all 0.3s ease-out;
      font-size: 98%;
      
      -webkit-text-stroke-width: 1px;
      -webkit-text-stroke-color: #96420a;
      
      font-weight: 700;
      
      position: absolute;
      top: 370px;
      left: 85px;
      z-index: 999;
    }

:coffeescript
    
    thisID = 0
    $ ->
    
      $("butt").click ->
        console.log('hello')
        window.location.href = "/game/quiz"
        return
        
      container = document.querySelector('#container')
      panel = document.querySelector('#panel')
      panorama = new (PANOLENS.ImagePanorama)('/assets/back.png')
      
      viewer = new (PANOLENS.Viewer)(container: container)
      viewer.add panorama
      viewer.enableControl(1)

      camera = new (THREE.PerspectiveCamera)(45, 1, 1, 2000)
      scene = new (THREE.Scene)

      # Basic communication
      
      $("#text_turn").html("It's not your turn!")
          
      console.log "WEBSOCKET SET-UP"
          
      socket = new WebSocket(Rails.configuration.x.local_url)
          
      socket.onopen = ->
        console.log "Connection opened"
        socket.send("Ping")
        return
      socket.onerror = (error) ->
        console.log "WebSocket Error " + error
        return
      socket.send2 = (iClient, iReceiver, iMove, iText) ->
        communication =
          senderID: iClient
          receiverID: iReceiver
          move: iMove     
            # Idea: Type of message
            # Options: message, turn_start, turn_end, kingdom_scan, ?
          text: iText     
            # Idea: Content of message
            # Options: Text as string, for kingdom_scan it would be the image data
        socket.send JSON.stringify(communication)
        console.log "Sent: " + JSON.stringify(communication)
        return
  
      socket.onmessage = (e) ->
        console.log "Received: " + e.data
        if e.data.includes("deviceID") and thisID == 0
          communication = JSON.parse(e.data)
          thisID = communication.deviceID
          console.log "New device has received ID: " + thisID
        else if e.data.includes("senderID")
          communication = JSON.parse(e.data)
          console.log "Message from " + communication.senderID
          if communication.senderID == "server"
            console.log communication.receiverID + " " + thisID
            if communication.move == "id_check"
              socket.send2(thisID, "server", "id_check", thisID)
            else if communication.move == "id_keep" and communication.receiverID == thisID
              thisID = communication.text
              console.log "Reassigned old ID: " + thisID
            else if communication.move == "ping"
              socket.send2(thisID, "server", "ping")
        return 
      
      
    